!function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=10)}([function(e,t,n){"use strict";var r,o,i,s=n(3),u="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-";function c(){i=!1}function a(e){if(e){if(e!==r){if(e.length!==u.length)throw new Error("Custom alphabet for shortid must be "+u.length+" unique characters. You submitted "+e.length+" characters: "+e);var t=e.split("").filter((function(e,t,n){return t!==n.lastIndexOf(e)}));if(t.length)throw new Error("Custom alphabet for shortid must be "+u.length+" unique characters. These characters were not unique: "+t.join(", "));r=e,c()}}else r!==u&&(r=u,c())}function p(){return i||(i=function(){r||a(u);for(var e,t=r.split(""),n=[],o=s.nextValue();t.length>0;)o=s.nextValue(),e=Math.floor(o*t.length),n.push(t.splice(e,1)[0]);return n.join("")}())}e.exports={get:function(){return r||u},characters:function(e){return a(e),r},seed:function(e){s.seed(e),o!==e&&(c(),o=e)},lookup:function(e){return p()[e]},shuffled:p}},function(e,t,n){"use strict";e.exports=n(2)},function(e,t,n){"use strict";var r=n(0),o=n(4),i=n(8),s=n(9)||0;function u(){return o(s)}e.exports=u,e.exports.generate=u,e.exports.seed=function(t){return r.seed(t),e.exports},e.exports.worker=function(t){return s=t,e.exports},e.exports.characters=function(e){return void 0!==e&&r.characters(e),r.shuffled()},e.exports.isValid=i},function(e,t,n){"use strict";var r=1;e.exports={nextValue:function(){return(r=(9301*r+49297)%233280)/233280},seed:function(e){r=e}}},function(e,t,n){"use strict";var r,o,i=n(5);n(0);e.exports=function(e){var t="",n=Math.floor(.001*(Date.now()-1567752802062));return n===o?r++:(r=0,o=n),t+=i(7),t+=i(e),r>0&&(t+=i(r)),t+=i(n)}},function(e,t,n){"use strict";var r=n(0),o=n(6),i=n(7);e.exports=function(e){for(var t,n=0,s="";!t;)s+=i(o,r.get(),1),t=e<Math.pow(16,n+1),n++;return s}},function(e,t,n){"use strict";var r,o="object"==typeof window&&(window.crypto||window.msCrypto);r=o&&o.getRandomValues?function(e){return o.getRandomValues(new Uint8Array(e))}:function(e){for(var t=[],n=0;n<e;n++)t.push(Math.floor(256*Math.random()));return t},e.exports=r},function(e,t){e.exports=function(e,t,n){for(var r=(2<<Math.log(t.length-1)/Math.LN2)-1,o=-~(1.6*r*n/t.length),i="";;)for(var s=e(o),u=o;u--;)if((i+=t[s[u]&r]||"").length===+n)return i}},function(e,t,n){"use strict";var r=n(0);e.exports=function(e){return!(!e||"string"!=typeof e||e.length<6)&&!new RegExp("[^"+r.get().replace(/[|\\{}()[\]^$+*?.-]/g,"\\$&")+"]").test(e)}},function(e,t,n){"use strict";e.exports=0},function(e,t,n){"use strict";n.r(t);var r,o=function(){function e(e,t){this.id=e,this.name=t,this.devices=[]}return e.prototype.getId=function(){return this.id},e.prototype.getName=function(){return this.name},e.prototype.getDevices=function(){return this.devices},e.prototype.selectDevice=function(e){return this.devices.find((function(t){return t.getId()===e}))},e.prototype.addDevice=function(e){this.devices.push(e)},e.prototype.deleteDevice=function(e){this.devices=this.devices.filter((function(t){return t.getId()!==e}))},e.prototype.enableAllDevuces=function(){this.devices.forEach((function(e){return e.enable()}))},e.prototype.disableAllDevices=function(){this.devices.forEach((function(e){return e.disable()}))},e.prototype.delayAction=function(e,t,n){setTimeout((function(){e(),n()}),t)},e}(),i=function(){function e(e,t,n){this.min=e,this.max=t,this.value=n}return e.prototype.getMin=function(){return this.min},e.prototype.getMax=function(){return this.max},e.prototype.getValue=function(){return this.value},e.prototype.setValue=function(e){e<this.min||e>this.max||(this.value=e)},e.prototype.increase=function(e){if(!(e<=0)){var t=this.value+e;t>this.max?this.value=this.max:this.value=t}},e.prototype.decrease=function(e){if(!(e<=0)){var t=this.value-e;t<this.min?this.value=this.min:this.value=t}},e}(),s=function(){function e(e,t,n){this.red=e,this.green=t,this.blue=n}return e.prototype.getRed=function(){return this.red.getValue()},e.prototype.getGreen=function(){return this.green.getValue()},e.prototype.getBlue=function(){return this.blue.getValue()},e.prototype.setRed=function(e){this.red.setValue(e)},e.prototype.setGreen=function(e){this.green.setValue(e)},e.prototype.setBlue=function(e){this.blue.setValue(e)},e.prototype.increaseRed=function(e){this.red.increase(e)},e.prototype.decreaseRed=function(e){this.red.decrease(e)},e.prototype.increaseGreen=function(e){this.green.increase(e)},e.prototype.decreaseGreen=function(e){this.green.decrease(e)},e.prototype.increaseBlue=function(e){this.blue.increase(e)},e.prototype.decreaseBlue=function(e){this.blue.decrease(e)},e}(),u=function(){function e(e,t){this.id=e,this.name=t,this.state=!1}return e.prototype.getId=function(){return this.id},e.prototype.getState=function(){return this.state},e.prototype.getName=function(){return this.name},e.prototype.setName=function(e){this.name=e},e.prototype.toggleState=function(){this.state=!this.state},e.prototype.disable=function(){this.state=!1},e.prototype.enable=function(){this.state=!0},e}(),c=(r=function(e,t){return(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}),a=function(e){function t(t,n,r,o,i,s){var u=e.call(this,t,n)||this;return u.screenDiagonal=r,u.volume=o,u.saturation=i,u.brightness=s,u}return c(t,e),t.prototype.getScreenDiagonal=function(){return this.screenDiagonal},t.prototype.getVolume=function(){return this.volume.getValue()},t.prototype.getSaturation=function(){return this.saturation.getValue()},t.prototype.getBrightness=function(){return this.brightness.getValue()},t.prototype.setVolume=function(e){this.volume.setValue(e)},t.prototype.setSaturation=function(e){this.saturation.setValue(e)},t.prototype.setBrightness=function(e){this.brightness.setValue(e)},t.prototype.increaseVolume=function(e){this.volume.increase(e)},t.prototype.decreaseVolume=function(e){this.volume.decrease(e)},t.prototype.increaseSaturation=function(e){this.saturation.increase(e)},t.prototype.decreaseSaturation=function(e){this.saturation.decrease(e)},t.prototype.increaseBrightness=function(e){this.brightness.increase(e)},t.prototype.decreaseBrightness=function(e){this.brightness.decrease(e)},t}(u),p=function(){var e=function(t,n){return(e=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(t,n)};return function(t,n){function r(){this.constructor=t}e(t,n),t.prototype=null===n?Object.create(n):(r.prototype=n.prototype,new r)}}(),f=function(e){function t(t,n,r,o){var i=e.call(this,t,n)||this;return i.brightness=r,i.color=o,i}return p(t,e),t.prototype.getBrightness=function(){return this.brightness.getValue()},t.prototype.getRed=function(){return this.color.getRed()},t.prototype.getGreen=function(){return this.color.getGreen()},t.prototype.getBlue=function(){return this.color.getBlue()},t.prototype.setBrightness=function(e){this.brightness.setValue(e)},t.prototype.setRed=function(e){this.color.setRed(e)},t.prototype.setGreen=function(e){this.color.setGreen(e)},t.prototype.setBlue=function(e){this.color.setBlue(e)},t.prototype.increaseBrightness=function(e){this.brightness.increase(e)},t.prototype.decreaseBrightness=function(e){this.brightness.decrease(e)},t.prototype.increaseRed=function(e){this.color.increaseRed(e)},t.prototype.decreaseRed=function(e){this.color.decreaseRed(e)},t.prototype.increaseGreen=function(e){this.color.increaseGreen(e)},t.prototype.decreaseGreen=function(e){this.color.decreaseGreen(e)},t.prototype.increaseBlue=function(e){this.color.increaseBlue(e)},t.prototype.decreaseBlue=function(e){this.color.decreaseBlue(e)},t}(u),l=n(1),h=new o(l.generate(),"Cool house"),d=new i(0,100,50),g=new i(0,100,50),y=new i(0,100,100),v=new i(0,100,100),b=new s(new i(0,255,255),new i(0,255,255),new i(0,255,255)),m=l.generate(),x=new a(m,"LG",35,d,g,y),w=l.generate(),V=new f(w,"RGB-Lamp-143",v,b);h.addDevice(x),h.addDevice(V);var B=h.selectDevice(m);B.enable(),B.setVolume(73),B.decreaseBrightness(18),B.increaseSaturation(999),B.toggleState(),console.log(B);var _=h.selectDevice(w);_.decreaseBrightness(841250),_.setBlue(500),_.decreaseGreen(-150),_.setRed(177),console.log(_),h.delayAction((function(){_.enable()}),2e3,(function(){h.delayAction((function(){_.enable()}),2e3,(function(){console.log(h.selectDevice(w))}))}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,